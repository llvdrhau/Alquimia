from cobra import Metabolite
from cobra.io import write_sbml_model
from f_screen_SBML import *

'''
fixing the reactions where a lot of carbon, oxygen, hydrogen goes missing look at the Excel files generated by 
the function print_model_2_excel (see script check_element_balance.py)
to see which reactions are leaking certain elements 
'''

modelName = "P_acnes_model.xml"
saveName = 'P_acnes_lvdh.xml'
save = False

loc_model = get_location(modelName)
model = cobra.io.read_sbml_model(loc_model)
model.name = "P_acnes_lvdh"

# bioMass metabolite does not have a name
metbiomassId = 'S_biomass_ext'
metbiomass = model.metabolites.get_by_id(metbiomassId)
metbiomass.name = 'Biomass'

# fix iron metabolites 2Fe2S and 4Fe4S
FeDict = {'S_cpdnew23_c0': 'Fe2S2',  # 2Fe2S
          'S_cpdnew24_c0': 'Fe4S2'}  # 4Fe4S

for metId in FeDict:
    metFe = model.metabolites.get_by_id(metId)
    metFe.formula = FeDict[metId]

# let's look at the reaction which cause a significant loss of carbon are they fixed?  (see the analysis Excel files)
rxnId = [
    "rxnnew73_c0",  # reaction to make protein
    "rxnnew74_c0"  # reaction to make RNA
]

for id in rxnId:
    check_reaction(model=model, reactionID=id)

# having looked at the reactions which lose a lot of carbon, lets fix the formulas of the metabolites so that
# mass-balances comply
# the stoichiometry of all the interested metabolites are one, so just add the missing elements to the formula
metFormulas = {
    'S_cpd11463_c0': 'C4H5N2O3C33.17H31.847O18.512',  # protein , C4H5N2O3R2 , replace the R
    'S_cpd11613_c0': 'C15H23O19P3C16.66H11.46O2.876',  # RNA, C15H23O19P3R3 , replace the R
}
# let's give the correct formula to each metabolite
for id in metFormulas:
    met = model.metabolites.get_by_id(id)
    met.formula = metFormulas[id]

''' 
let's estimate the formulas of metabolites (that are missing a formula) with a reaction of your choosing (see Excel analysis)
'''
fixDict1 = {
    'S_cpdnew22_c0': 'rxnnew66_c0',  # Propionibacterium peptidoglycan
    'S_cpdnew25_c0': 'rxnnew71_c0',  # Menaquinol-9(4H)
    'S_cpdnew20_c0': 'rxnnew64_c0',  # Polysacaride
    'S_cpdnew21_c0': 'rxnnew65_c0',  # Lipomannan
    'S_cpdnew19_c0': 'rxnnew63_c0',  # UDP-2,3-diacetamido-2,3-dideoxy-D-mannuronate
    'S_cpdnew10_c0': 'rxnnew54_c0',  # average fatty acyl-ACP
    'S_cpdnew11_c0': 'rxnnew55_c0'  # Avg. Phosphatidylglycerol
}
# metabolites with reactions that were dependent of the `previous metabolites to have formulas
fixDict2 = {
    'S_cpdnew27_c0': 'rxnnew67_c0',  # Propionibacterium cell wall
    'S_cpdnew12_c0': 'rxnnew56_c0',  # Avg, Cardiolipin
    'S_cpdnew13_c0': 'rxnnew57_c0',  # Avg. Phosphatidylinositol
    'S_cpdnew14_c0': 'rxnnew58_c0',  # Avg. Lysophosphatidylinositol
    'S_cpdnew15_c0': 'rxnnew59_c0',  # Avg. Phosphatidylethanolamine
    'S_cpdnew16_c0': 'rxnnew60_c0',  # Avg. Acylphosphatidylglycerol
    'S_cpdnew17_c0': 'rxnnew61_c0'  # Avg. Diacylinositol mannoside
}
fixDict3 = {
    'S_cpdnew27_c0': 'rxnnew67_c0',  # Propionibacterium cell wall
    'S_cpdnew18_c0': 'rxnnew62_c0'  # Propionibacterium lipids
}
fixDict4 = {
    'S_biomass_ext': 'biomass_c0',  # Biomass
    'S_cpdnew26_c0': 'rxnnew72_c0',  # Small molecule pool
}

fixDict = result = {**fixDict1, **fixDict2, **fixDict3, **fixDict4}
model, estimastesFormuals = fix_missing_formulas(model=model, fixDict=fixDict, maxIterations=20)
print(estimastesFormuals)

# check in the Excel file if mass balances now comply
print_SBML_info_2_excel(modelName=model, print2Excel=False, saveName='test666.xlsx')


# ------------------------------------------------------------ save the model
if save:
    write_sbml_model(model, r"C:\Users\lucas\PycharmProjects\Alquimia\SBML models\{}".format(saveName))
